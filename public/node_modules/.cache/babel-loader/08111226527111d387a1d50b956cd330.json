{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xuemi_uj\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nconst app = new Clarifai.App({\n  apiKey: '3a72a567db724cd7a41695019867a30a' //'3a72a567db724cd7a41695019867a30a'\n\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n\n    this.calculateFaceLocation = picdata => {\n      const clarifaiFace = picdata.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      //console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //https://samples.clarifai.com/face-det.jpg\n      //model id: a403429f2ddf4b49b307e318f00e528b\n      //\"https://samples.clarifai.com/face-det.jpg\"\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err)); //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/xuemi_uj/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Clarifai","FaceRecognition","app","App","apiKey","state","input","imageUrl","box","calculateFaceLocation","picdata","clarifaiFace","outputs","data","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","setState","onInputChange","event","target","value","onSubmit","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nconst app = new Clarifai.App({\n  apiKey:'3a72a567db724cd7a41695019867a30a' \n  //'3a72a567db724cd7a41695019867a30a'\n  \n});\n\nclass App extends Component {\n  state ={\n    input: '',\n    imageUrl: '',\n    box: {}\n  }\n\n  calculateFaceLocation =(picdata) =>{\n    const clarifaiFace = picdata.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');  \n    const width=Number(image.width); \n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col*width,\n      topRow: clarifaiFace.top_row*height,\n      rightCol: width-(clarifaiFace.right_col*width),\n      bottomRow:height-(clarifaiFace.bottom_row*height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box:box})\n  }\n\n  onInputChange = (event) => {\n     //console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      })\n  }\n//a403429f2ddf4b49b307e318f00e528b\n  onSubmit = () => {\n     this.setState({imageUrl: this.state.input});\n     //https://samples.clarifai.com/face-det.jpg\n     //model id: a403429f2ddf4b49b307e318f00e528b\n     //\"https://samples.clarifai.com/face-det.jpg\"\n     app.models\n     .predict(\n         Clarifai.FACE_DETECT_MODEL, \n         this.state.input)\n     .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n     .catch(err =>console.log(err)); \n        //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm  onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl}/>\n      </div>\n     );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}