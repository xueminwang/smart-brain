{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xuemi_uj\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = picdata => {\n      const clarifaiFace = picdata.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3001/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3001/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(err => console.log(err));\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/xuemi_uj/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","Particles","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","state","loadUser","data","setState","calculateFaceLocation","picdata","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onSubmit","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\n\nconst particlesOptions = {\n  particles:{\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\nclass App extends Component {\n  state = initialState;\n\n  loadUser = (data) => {\n     this.setState({user: {\n       id: data.id,\n       name: data.name,\n       email: data.email,\n       entries: data.entries,\n       joined: data.joined\n    }})\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3001/')\n  //   .then(response=>response.json())\n  //   .then(console.log)\n  // }\n\n  calculateFaceLocation = (picdata) => {\n    const clarifaiFace = picdata.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');  \n    const width = Number(image.width); \n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col*width,\n      topRow: clarifaiFace.top_row*height,\n      rightCol: width-(clarifaiFace.right_col*width),\n      bottomRow:height-(clarifaiFace.bottom_row*height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box:box});\n  }\n\n  onInputChange = (event) => {\n     this.setState({\n        input: event.target.value\n      })\n  }\n//a403429f2ddf4b49b307e318f00e528b\n  onSubmit = () => {\n     this.setState({imageUrl: this.state.input});\n     fetch('http://localhost:3001/imageurl', {\n       method: 'post',\n       headers: {'Content-Type': 'application/json'},\n       body: JSON.stringify({\n         input: this.state.input\n       })\n     })\n     .then(response => response.json())\n     .then(response => { \n        if (response) {\n             fetch('http://localhost:3001/image', {\n               method: 'put',\n               headers: {'Content-Type': 'application/json'},\n               body: JSON.stringify({\n                   id: this.state.user.id\n               })\n            })\n            .then(response=>response.json())\n            .then(count =>{\n              this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n            .catch(err =>console.log(err)); \n      }\n      this.displayFaceBox(this.calculateFaceLocation(response));\n   })\n     .catch(err => console.log(err));\n}\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState)\n    }else if(route === 'home'){\n     this.setState({isSignedIn: true})\n    } \n    this.setState({route: route});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <Particles className='particles' \n         params={particlesOptions}\n      />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route === 'home' ?\n              <div>\n                <Logo />\n                <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                <ImageLinkForm  \n                   onInputChange={this.onInputChange} \n                   onSubmit={this.onSubmit}\n                />\n                <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n              </div>\n          :( this.state.route === 'signin' ?\n              <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n           )\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}